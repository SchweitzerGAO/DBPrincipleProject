<?xml version="1.0"?>
<doc>
    <assembly>
        <name>APIs</name>
    </assembly>
    <members>
        <member name="M:APIs.Controllers.AllOrderController.getOrder(System.Int64)">
            <summary>
            顾客查询所有订单
            </summary>
            <param name="customerId">顾客ID</param>
            <returns>顾客所有订单信息</returns>
        </member>
        <member name="M:APIs.Controllers.AllOrderController.deleteOrder(System.String)">
            <summary>
            
            </summary>
            <param name="orderId"></param>
            <returns></returns>
        </member>
        <member name="M:APIs.Controllers.AreaController.getAreasById(System.Int64)">
            <summary>
            获取一个场次的所有分区以及座位
            </summary>
            <param name="slotId">场次ID</param>
            <returns>此场次的所有分区及所有分区的所有座位</returns>
        </member>
        <member name="M:APIs.Controllers.CommentController.newComment(APIs.Models.Comment)">
            <summary>
            添加评论
            </summary>
            <param name="comment">评论信息（Json格式）</param>
            <response code="200">插入成功</response>
            <response code="400">插入失败</response>
            <returns>状态码并信息</returns>
        </member>
        <member name="M:APIs.Controllers.CommentController.deleteComment(System.Nullable{System.UInt64})">
            <summary>
            删除评论
            </summary>
            <param name="commId">评论ID</param>
            <response code="200">删除成功</response>
            <response code="400">删除失败</response>
            <response code="404">未找到信息</response>
            <returns>状态码并信息</returns>
        </member>
        <member name="M:APIs.Controllers.CommentController.getCommentByShow(System.Int64)">
            <summary>
            获取某演出的所有评论
            </summary>
            <param name="showId"></param>
            <returns>演出所有评论</returns>
        </member>
        <member name="M:APIs.Controllers.GeneralCustomerNoticeController.getAllCustomerNotice">
            <summary>
            顾客获取所有通知
            </summary>
            <returns>顾客的所有通知</returns>
        </member>
        <member name="M:APIs.Controllers.GeneralGoodsController.getGeneralGoodsByShow(System.Int64)">
            <summary>
            返回与某演出关联的所有总体周边信息
            </summary>
            <param name="showId">演出ID</param>
            <returns>所有总体周边信息</returns>
        </member>
        <member name="M:APIs.Controllers.GeneralShowsController.getGeneralShows">
            <summary>
            获取所有演出相关信息
            </summary>
            <response code="404">暂无演出</response>
            <response code="400">数据库请求错误</response>
            <response code="200">查找成功</response>
            <returns>所有演出信息</returns>
        </member>
        <member name="M:APIs.Controllers.GeneralSlotController.getGeneralSlotByShow(System.Int64)">
            <summary>
            返回所有总体场次信息
            </summary>
            <param name="showId">演出ID</param>
            <returns>所有场次信息</returns>
        </member>
        <member name="M:APIs.Controllers.GoodsController.addGoods(APIs.Models.SellerGoods)">
            <summary>
            添加周边
            </summary>
            <param name="goods">周边信息</param>
        </member>
        <member name="M:APIs.Controllers.GoodsController.updateGoods(APIs.Models.SellerGoods)">
            <summary>
            商家更改周边的数量和价格
            </summary>
            <param name="goods">周边信息</param>
        </member>
        <member name="M:APIs.Controllers.GoodsController.deleteGoods(System.Int64,System.Int64)">
            <summary>
            商家下架周边
            </summary>
            <param name="sellerId">商家ID</param>
            <param name="goodsId">周边ID</param>
        </member>
        <member name="M:APIs.Controllers.GoodsOrderController.getGoodsOrders(System.Int64)">
            <summary>
            顾客的周边订单
            </summary>
            <param name="customerId">顾客ID</param>
            <returns>周边订单信息</returns>
        </member>
        <member name="M:APIs.Controllers.GoodsOrderController.deleteGoodsOrder(System.UInt64)">
            <summary>
            退订，并进行一些级联操作
            </summary>
            <param name="orderId">订单编号</param>
        </member>
        <member name="M:APIs.Controllers.LabelController.getLabelByShow(System.Int64)">
            <summary>
            获取演出标签信息
            </summary>
            <param name="showId">演出ID</param>
            <returns>该演出的标签信息</returns>
        </member>
        <member name="M:APIs.Controllers.ParticularGoodsController.getParticularGoodsById(System.Int64)">
            <summary>
            查看某周边的详细信息
            </summary>
            <param name="goodsId"> 周边ID</param>
            <returns>所有售卖此周边的商家、价格以及剩余数量</returns>
        </member>
        <member name="M:APIs.Controllers.ParticularGoodsController.newGoodsOrder(APIs.Models.GoodsOrder[])">
            <summary>
            购买周边
            </summary>
            <param name="orders">周边订单数组</param>
            <returns>状态码</returns>
        </member>
        <member name="M:APIs.Controllers.ParticularNoticeController.getParticularNoticeById(System.UInt64)">
            <summary>
            查看详细通知
            </summary>
            <param name="noticeId">通知ID</param>
            <returns>通知详细内容</returns>
        </member>
        <member name="M:APIs.Controllers.ParticularShowController.getParticularShow(System.Int64)">
            <summary>
            获取某个演出的相关信息
            </summary>
            <param name="showId"> 演出ID</param>
            <returns>某个演出的相关信息</returns>
        </member>
        <member name="M:APIs.Controllers.ParticularSlotController.getParticularSlotById(System.Int64)">
            <summary>
            获取一个场次的所有信息
            </summary>
            <param name="slotId">场次ID</param>
            <returns>场次的分区、座位、座位图信息</returns>
        </member>
        <member name="M:APIs.Controllers.ParticularSlotController.newShowOrder(APIs.Models.ShowOrder[])">
            <summary>
            买票
            </summary>
            <param name="orders">订单</param>
            <returns>状态码</returns>
        </member>
        <member name="M:APIs.Controllers.SearchController.getSearchResult(System.String)">
            <summary>
            搜索
            </summary>
            <param name="search">搜索条件</param>
            <returns>符合搜索条件的结果(包括演出和周边)</returns>
        </member>
        <member name="M:APIs.Controllers.SellerNoticeController.getSellerNotice">
            <summary>
            商家查看通知
            </summary>
            <returns>商家的所有通知</returns>
        </member>
        <member name="M:APIs.Controllers.SellerViewGoodsController.getGoods(System.Int64)">
            <summary>
            商家查看周边信息
            </summary>
            <param name="sellerId">商家ID</param>
            <returns>周边信息（Json格式）</returns>
        </member>
        <member name="M:APIs.Controllers.ShowOrderController.getShowOrders(System.Int64)">
            <summary>
            查看顾客演出订单
            </summary>
            <param name="customerId">顾客ID</param>
            <returns>顾客演出订单信息</returns>
        </member>
        <member name="M:APIs.Controllers.ShowOrderController.deleteShowOrder(System.UInt64)">
            <summary>
            删除演出订单并进行一系列级联操作
            </summary>
            <param name="orderId">订单编号</param>
        </member>
        <member name="M:APIs.Controllers.SignUpController.SignUp(APIs.Models.SignUp)">
            <summary>
            注册
            </summary>
            <param name="signUp"> 注册用户类</param>
            <returns>注册成功的用户名ID</returns>
            <!--注册用户类的UserType应当限定在SELLER 以及 CUSTOMER 以内-->
        </member>
        <member name="M:APIs.Controllers.UserManageController.ResetPassword(System.String,System.String,System.String)">
            <summary>
            重置密码
            </summary>
            <param name="tokenValue"> token </param>
            <param name="oldPassword"> 原有密码 </param>
            <param name="newPassword"> 新密码 </param>
            <returns>修改密码的结果</returns>
        </member>
        <member name="M:APIs.Controllers.UserManageController.DeleteUser(System.String)">
            <summary>
            用户注销
            </summary>
            <param name="tokenValue">token</param>
            <returns>修改密码是否成功</returns>
        </member>
        <member name="M:APIs.Controllers.UserManageController.UpdatePersonalInfo(System.String,System.String,System.String,System.String)">
            <summary>
            填写基本信息,实现数量可变的参数添加
            </summary>
            <param>token</param>
            <returns></returns>
        </member>
        <member name="M:APIs.Controllers.VipController.newVip(System.Nullable{System.Int64})">
            <summary>
            添加VIP信息
            </summary>
            <param name="customerId">顾客ID</param>
            <response code="200">插入成功</response>
            <response code="400">插入失败</response>
            <returns>状态码并信息</returns>
        </member>
        <member name="M:APIs.Controllers.VipController.updateVip(System.Int64,System.Double)">
            <summary>
            更新会员积分
            </summary>
            <param name="customerId">顾客ID</param>
            <param name="newPoint">新的积分</param>
        </member>
        <member name="M:APIs.Controllers.VipController.checkVip(System.Int64)">
            <summary>
            判断顾客是否是VIP
            </summary>
            <param name="customerId">顾客ID</param>
            <returns>若是VIP,返回VIP信息，否则返回null,给后端</returns>
        </member>
        <member name="M:APIs.Controllers.VIPInfoController.getVip(System.Int64)">
            <summary>
            返回顾客的VIP信息
            </summary>
            <param name="customerId">顾客ID</param>
            <returns></returns>
        </member>
        <member name="T:APIs.DBUtility.ConnectionHelper">
            <summary>
            获取连接字符串
            </summary>
        </member>
        <member name="T:APIs.DBUtility.DBHelper">
            <summary>
            连接数据库，执行增删改查,主码自增
            </summary>
        </member>
        <member name="M:APIs.DBUtility.JWTHelper.SetJwtEncode(APIs.Models.JWTPayload)">
            <summary>
            生成JwtToken
            </summary>
            <param name="jwtPayload">非隐私的用户数据</param>
            <returns></returns>
        </member>
        <member name="M:APIs.DBUtility.JWTHelper.GetHeader(System.String)">
            <summary>
            获取Token信息，解密获得其他信息
            </summary>
            <param name="value"></param>
            <returns>头部信息</returns>
        </member>
        <member name="M:APIs.DBUtility.JWTHelper.GetPayload(System.String)">
            <summary>
            获取Token信息，解密获得其他信息
            </summary>
            <param name="value"></param>
            <returns>负载信息</returns>
        </member>
        <member name="M:APIs.DBUtility.JWTHelper.IsOkToken(System.String)">
            <summary>
            基础校验传入的Token的合法性
            </summary>
            <param name="tokenValue"></param>
            <returns></returns>
        </member>
        <member name="M:APIs.DBUtility.JWTHelper.GetUsers(System.String)">
            <summary>
            用户脱敏信息
            </summary>
            <param name="tokenValue"></param>
            <returns>User类型</returns>
        </member>
        <member name="P:APIs.Models.JWTHeader.alg">
            <summary>
            解密算法
            </summary>
        </member>
        <member name="P:APIs.Models.JWTHeader.typ">
            <summary>
            TOKEN类型
            </summary>
        </member>
        <member name="P:APIs.Models.JWTHeader.expTime">
            <summary>
            过期时间戳
            </summary>
        </member>
        <member name="P:APIs.Models.JWTPayload.UserID">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:APIs.Models.JWTPayload.UserType">
            <summary>
            用户类型，0为管理员，1为用户，2为商家
            </summary>
        </member>
    </members>
</doc>
